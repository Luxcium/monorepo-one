Great! Here's a condensed version of the documentation for the `mapping-tools` package:

## Package Overview
`mapping-tools` is an npm package designed for JavaScript and TypeScript developers. It provides utility functions for working with data collections, allowing developers to apply transformations or validations to each item in a collection, either in serial or in parallel. The package supports advanced error handling and asynchronous code, making it suitable for a wide range of applications, including data processing and validation.

## Installation
To install `mapping-tools`, use npm, yarn, or pnpm:

```shell
# npm
npm install mapping-tools
# yarn
yarn add mapping-tools
# pnpm
pnpm add mapping-tools
```

## Main Functions
`mapping-tools` provides 5 main functions: `awaitedMapping`, `parallelMapping`, `serialMapping`, `generateMappingAsync`, and `generateMapping`. These functions work with both promises and non-promises and support advanced error handling. The output is based on the `Settled<TVal>` type, which allows users to distinguish between successful and unsuccessful results. Each function takes a collection of items and 4 optional delegate functions: transformFn, lookupFn, validateFn, and errLookupFn.

## Delegate Functions
`mapping-tools` provides four main types of delegate functions that can be used as arguments to the main functions: `TransformFn`, `LookupFn`, `ValidateFn`, and `ErrLookupFn`. These delegates are responsible for carrying out the mapping, validation, and error handling processes.

## Base Types
`mapping-tools` defines several base types that are used throughout the package. These include `Base<TBase>`, `Settled<TVal>`, `SettledRight<TVal>`, `SettledLeft`, `PromiseFulfilledResult<TVal>`, `PromiseSettledResult<TVal>`, and `PromiseRejectedResult`.

## Aliases Types
`mapping-tools` defines several alias types that simplify the use of the main functions. These include `Deferred<Base>`, `BaseOrDeferred<Base>`, `Collection<Base>`, `DeferredCollection<Base>`, `SettledArray<Result>`, `SettledValue<Result>`, `SettledValues<Result>`, `NullSymbol`, and `OnlySideEffect`.

## Benefits
`mapping-tools` has several benefits, including its adaptive ability to handle both promises and non-promises as input, which allows it to be easily integrated into a wide range of contexts and projects. The package has been designed with resilience in mind, including robust error handling. The output of the package is based on the `Settled<TVal>` type, which allows users to easily distinguish between successful and unsuccessful results.
